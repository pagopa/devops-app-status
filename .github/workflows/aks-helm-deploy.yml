name: Deploy on AKS

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: environment
    secrets:
      token:
        required: true
        description: Github Token

env:
  NAMESPACE: diego
  APP_NAME: diegoappstatus
  AKS_NAME: dvopla-d-neu-dev01-aks
  AKS_RESOURCE_GROUP: dvopla-d-neu-dev01-aks-rg


permissions:
  id-token: write
  contents: read

jobs:
  create_runner:
    name: Create Runner
    runs-on: ubuntu-22.04
    environment: dev
    outputs:
      runner_name: ${{ steps.create_github_runner.outputs.runner_name }}
    steps:
      - name: Create GitHub Runner
        id: create_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-create-action/commits/main
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-create-action@main
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          container_app_environment_name: ${{ secrets.AZURE_CONTAINER_APP_ENVIRONMENT_NAME }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}
          self_hosted_runner_image_tag: "v1.4.0"

  deploy_helm:
    name: Deploy on AKS
    runs-on: [ self-hosted, "${{ needs.create_runner.outputs.runner_name }}" ]
    needs: [ create_runner ]
    environment: dev
    steps:
      - uses: azure/setup-helm@v3
        id: install_helm
        with:
          version: 'v3.11.2'
      - name: Check helm
        shell: bash
        run: |
          helm version
      - name: Deploy helm 3
        uses: pagopa/github-actions-template/aks-helm-deploy@helm-deploy
        with:
          branch: ${{ github.ref_name }}
          namespace: ${{ env.NAMESPACE }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ""
          env: ${{ inputs.environment }}
          cluster_name: ${{ env.AKS_NAME }}
          resource_group: ${{ env.AKS_RESOURCE_GROUP }}
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  cleanup_runner:
    name: Cleanup Runner
    if: always()
    runs-on: ubuntu-22.04
    environment: dev
    needs: [create_runner, deploy_helm]
    steps:
      - name: Cleanup GitHub Runner
        id: cleanup_github_runner
        # from https://github.com/pagopa/github-self-hosted-runner-azure-cleanup-action/commits/main
        uses: pagopa/eng-github-actions-iac-template/azure/github-self-hosted-runner-azure-cleanup-action@main
        with:
          client_id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant_id: ${{ secrets.AZURE_TENANT_ID }}
          subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resource_group_name: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          runner_name: ${{ needs.create_runner.outputs.runner_name }}
          pat_token: ${{ secrets.BOT_TOKEN }}
